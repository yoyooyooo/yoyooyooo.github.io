{"data":{"site":{"siteMetadata":{"title":"yoyo","author":"yoyo"}},"markdownRemark":{"id":"d9f3f30c-e226-563c-a90c-668f3151def4","excerpt":"gulp 常用插件/相关库 vinyl 虚拟文件对象流\nvinyl-fs 用于读取指定路径的文件并封装成 vinyl 格式的对象流，或者将 vinyl 对象流写入文件系统指定路径，该工具该支持 glob，该工具其实是 gulp 的 src 和 dest 的底层实现\nvinyl-source-stream…","html":"<h1>gulp 常用插件/相关库</h1>\n<p>vinyl 虚拟文件对象流\nvinyl-fs 用于读取指定路径的文件并封装成 vinyl 格式的对象流，或者将 vinyl 对象流写入文件系统指定路径，该工具该支持 glob，该工具其实是 gulp 的 src 和 dest 的底层实现\nvinyl-source-stream 把可读流转换为 vinyl 对象\ngulp-streamify 将一个使用 buffer 的插件的输出转化为一个可读流\ngulp-data 往文件对象里添加属性，方便其他流取出来用\ngulp-rename 重命名文件\nrun-sequence 管理任务顺序和并行\ngulp-plumber 错误自启动\ngulp-wrap 文件前后包点字符串什么的\ngulp-beautify 代码美化\ngulp-if 根据条件选择是否加载插件\nstream-combiner2 合并流</p>\n<h1>gulp 插件</h1>\n<p>gulp 的插件要求尽量只做一件事，大多都用 <a href=\"https://github.com/rvagg/through2\">though2</a> 这个库。\nthrough2 是对 node.js 原生 stream.Transform 进行的封装，省去了每次 new 一个 transform 流，让你可以专注写_transform 方法。gulp 里要用 through2.obj（objectMode 模式），简单例子：\n<img src=\"https://yoyo-1257904590.cos.ap-shanghai.myqcloud.com/code2018-12-8.png\"></p>\n<blockquote>\n<p>上面提到的大部分 gulp 插件都是 through2 实现的，源码都很简单</p>\n</blockquote>","frontmatter":{"title":"gulp笔记","date":"2018.12.08"}}},"pageContext":{"slug":"/artical/gulp笔记/","previous":{"fields":{"slug":"/artical/Material-UI、styled-components结合使用/"},"frontmatter":{"title":"Material-UI、styled-components结合使用"}},"next":{"fields":{"slug":"/artical/umi插件笔记/"},"frontmatter":{"title":"umi插件笔记"}}}}