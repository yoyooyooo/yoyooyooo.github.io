{"data":{"allMarkdownRemark":{"totalCount":21,"edges":[{"node":{"id":"6c352dde-0bdb-5786-b2d3-571b1f5bc748","frontmatter":{"title":"asasas","date":"2019.01.10"},"fields":{"slug":"/artical/asasa/"},"excerpt":"s\nss"}},{"node":{"id":"38c63bc6-0f8a-552c-8a23-b1567fc0a38a","frontmatter":{"title":"gatsby","date":"2019.01.07"},"fields":{"slug":"/artical/gatsby/"},"excerpt":"gatsby 是基于 react 的静态站点构建工具，不同于 ssr，他直接在编译时处理页面所需要的数据，(React 官网) https://reactjs.org 就是用 gatsby 搭建的。 用 创建页面，并且传入数据（ 原文 ）： 页面可以从 props…"}},{"node":{"id":"d9ea1beb-203b-5962-997c-29bc7f30be37","frontmatter":{"title":"Material-UI、styled-components结合使用","date":"2019.01.02"},"fields":{"slug":"/artical/Material-UI、styled-components结合使用/"},"excerpt":"js-in-css 方案有很多，Material-UI 内置使用的是 JSS，个人还是习惯用 styled-components。\n当 JSS 和 styled-components 结合使用时会遇到优先级问题，默认情况下 JSS 把 css…"}},{"node":{"id":"d9f3f30c-e226-563c-a90c-668f3151def4","frontmatter":{"title":"gulp笔记","date":"2018.12.08"},"fields":{"slug":"/artical/gulp笔记/"},"excerpt":"gulp 常用插件/相关库 vinyl 虚拟文件对象流\nvinyl-fs 用于读取指定路径的文件并封装成 vinyl 格式的对象流，或者将 vinyl 对象流写入文件系统指定路径，该工具该支持 glob，该工具其实是 gulp 的 src 和 dest 的底层实现\nvinyl…"}},{"node":{"id":"d092df17-a846-54c3-af08-5e2812f0d560","frontmatter":{"title":"umi插件笔记","date":"2018.11.15"},"fields":{"slug":"/artical/umi插件笔记/"},"excerpt":"umi 的核心是插件系统，可以写自己的插件针对功能的需要可以去使用修改代码打包配置，修改启动代码，约定目录结构，修改 HTML 等更丰富接口，具体 官方文档 写的挺详细的，这里记录下实际使用。 插件使用 插件可以是一个 npm 包，也可以是路径直接引向一个 JS…"}},{"node":{"id":"d6df7d43-9a51-5cee-8122-0ea4b9683226","frontmatter":{"title":"nodejs编写命令行工具","date":"2018.11.02"},"fields":{"slug":"/artical/nodejs编写命令行工具/"},"excerpt":"命令可使用 这个库 简单的复制模版到指定目录可使用 或  。 或者用"}},{"node":{"id":"32335539-3640-5cb9-adf9-2b8064b805e4","frontmatter":{"title":"Rxjs笔记（10）：转化类操作符","date":"2018.06.04"},"fields":{"slug":"/artical/rx10转化类操作符/"},"excerpt":"map 最简单的转化操作符，类似 js 数组的 map，接受一个函数参数，第二个参数可选，作为函数参数执行时的 this 指向。需要注意的是使用第二个参数的时候，函数参数不能用箭头函数。不过第二个参数还是少用吧，如果一个函数执行时依赖于 this…"}},{"node":{"id":"9b413d78-65ad-534c-b3c2-93f5212c8ae7","frontmatter":{"title":"Rxjs笔记（9）：操作符例子集合","date":"2018.06.02"},"fields":{"slug":"/artical/rx9操作符组合例子/"},"excerpt":"Rxjs 最难的是怎么合理利用这么多操作符达到想要的目的，记录一些例子，可能不是最优解，主要为了增加不同操作符的熟练度，有些例子估计学到后面需要回头再来优化 记录 5S 内点击次数 分成 2 个 Observable，一个专门负责计数，一个专门负责响应点击事件"}},{"node":{"id":"e0637a27-66f2-5505-9ae0-a6e1d12f74d7","frontmatter":{"title":"Rxjs笔记（8）：过滤数据流","date":"2018.05.31"},"fields":{"slug":"/artical/rx8过滤数据流/"},"excerpt":"功能 适用的操作符 过滤掉不满足条件的数据 filter 获得满足条件的第一个数据 first 获得满足条件的最后一个数据 last 从数据流中选取最先出现的若干数据 take 从数据流中选取最后出现的若干数据 takeLast…"}},{"node":{"id":"31e0a56f-8adc-5773-959f-5c0850c9f3d7","frontmatter":{"title":"Rxjs笔记（7）：辅助类操作符","date":"2018.05.30"},"fields":{"slug":"/artical/rx7辅助类操作符/"},"excerpt":"功能 适用的操作符 统计数据流中产生的所有数据个数 count 获得数据流中最大或者最小的数据 max 、 min 对数据流中所有数据进行规约操作 reduce 判断是否所有数据都满足某个条件 every 找到第一个满足条件的数据 find 、 findIndex…"}},{"node":{"id":"d07fd3fd-846f-59ff-a868-4d34b34575df","frontmatter":{"title":"Rxjs笔记（6）：合并类操作符","date":"2018.05.28"},"fields":{"slug":"/artical/rx6合并类操作符/"},"excerpt":"功能 适用操作符 把多个操作符以头尾相连的方式合并 concat 、 concatAll 把多个操作符以先到先得的方式合并 merge 、 mergeAll 把多个操作符以一一对应的方式合并 zip 、 zipAll…"}},{"node":{"id":"ae29e1ff-e0bc-5496-bab8-0e897be22764","frontmatter":{"title":"Rxjs笔记（5）：高阶Observable","date":"2018.05.27"},"fields":{"slug":"/artical/rx5高阶Observable/"},"excerpt":"高阶 Observable 高阶 Observable 打开了一扇大门，用一个 Observable 对象来管理多个 Observable…"}},{"node":{"id":"2ba7efb3-6338-5ed9-bf93-7d5288696f01","frontmatter":{"title":"Rxjs笔记（4）：创建类操作符","date":"2018.05.26"},"fields":{"slug":"/artical/rx4创建类操作符/"},"excerpt":"同步类： create   of   range   generate   repeat 异步类： interval   timer   from   fromEvent   fromEvent   fromEventPattern   repeatWhen   defer…"}},{"node":{"id":"70f50217-f949-5820-b2bf-8fbc9785301b","frontmatter":{"title":"Rxjs笔记（3）：操作符","date":"2018.05.25"},"fields":{"slug":"/artical/rx3操作符/"},"excerpt":"Rxjs 的世界是由操作符连接的，一个简单的自定义操作符例子： 注：本文及以后用到的 |> 操作符是来自 https://github.com/tc39/proposal-pipeline-operator"}},{"node":{"id":"41d3ee1f-43d5-5389-9ff9-bbe107e09873","frontmatter":{"title":"Rxjs笔记（2）","date":"2018.05.15"},"fields":{"slug":"/artical/rx2/"},"excerpt":"Rxjs 安装 npm 安装或者直接引用在线版 npm install rxjs\n https://unpkg.com/rxjs@6.1.0/index.js Rxjs 是观察者模式和迭代器模式的组合。它 2 个重要的概念： Observable  和  Observer…"}},{"node":{"id":"cb82da46-82e1-5b2f-84b8-75e332cd8db4","frontmatter":{"title":"Rxjs笔记（1）","date":"2018.05.14"},"fields":{"slug":"/artical/rx1/"},"excerpt":"https://stackblitz.com/edit/rx-1 一个例子，对比 jQuery 和 Rxjs 分别写的简单 demo。 jQuery 版本：\nstartTime 变量在 2 个不痛的函数都有用到，一不小心就会引发 bug。代码看起来是一串指令。 Rxjs…"}},{"node":{"id":"62c3e2b4-6605-507f-9908-0cacfd3cf13a","frontmatter":{"title":"react-motion笔记","date":"2018.02.27"},"fields":{"slug":"/artical/react-motion笔记/"},"excerpt":"一般写法： 指定一个初始 style(defaultStyle)，然后赋值一个目标 style(style)，中间每帧都会由 react-motion 计算出对应的 style，用户只管使用生成的 style(interpolatingStyle…"}},{"node":{"id":"95064666-de8b-570e-a1b9-375db8994d17","frontmatter":{"title":"实用css片段","date":"2018.02.06"},"fields":{"slug":"/artical/实用css片段/"},"excerpt":"~ Bouncing loader Donut spinner 常用 cubic-bezier Hover underline animation 关键点：hover 改变 transform-orign Box-sizing reset…"}},{"node":{"id":"35e999fb-a7c9-5501-abe3-26b79cf0662f","frontmatter":{"title":"js实用函数之array","date":"2018.01.24"},"fields":{"slug":"/artical/js实用函数之array/"},"excerpt":"一些实用的例子，大多来自  30-seconds-of-code 。主要用了 map，filter，reduce 等高阶函数，函数式写法，代码优雅 数组平均数 reduce()将每个值添加到累加器，初始值为 0，总和除以数组长度。 计算数组中值出现的次数 最后的一个逗号后面的…"}},{"node":{"id":"35892410-00a2-59a2-b05a-d17e553d81ff","frontmatter":{"title":"redux文档整理","date":"2017.12.19"},"fields":{"slug":"/artical/redux文档总结/"},"excerpt":"概念 store ：(也称为 state tree) 是一个宽泛的概念， 但是在 Redux API 中，通常是指一个唯一的 state 值，由 store 管理且由 getState() 方法获得。它表示了 Redux…"}},{"node":{"id":"efedc85b-7a29-5bcd-beb8-0b2c0d5967cf","frontmatter":{"title":"js实用方法之杂","date":"2017.10.12"},"fields":{"slug":"/artical/js实用函数之杂/"},"excerpt":"一些实用的例子，大多来自 30-seconds-of-code 。主要用了 map，filter，reduce 等高阶函数，函数式写法，代码优雅 列举字符串所有排列组合 使用递归。对于给定字符串中的每个字母，为字母创建字谜。使用 map…"}}]}},"pageContext":{}}