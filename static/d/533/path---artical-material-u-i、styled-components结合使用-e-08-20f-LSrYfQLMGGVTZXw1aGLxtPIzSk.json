{"data":{"site":{"siteMetadata":{"title":"yoyo","author":"yoyo"}},"markdownRemark":{"id":"d9ea1beb-203b-5962-997c-29bc7f30be37","excerpt":"js-in-css 方案有很多，Material-UI 内置使用的是 JSS，个人还是习惯用 styled-components。\n当 JSS 和 styled-components 结合使用时会遇到优先级问题，默认情况下 JSS 把 css 注入到 最底部， 优先级大于 styled-components，JSS…","html":"<p>js-in-css 方案有很多，Material-UI 内置使用的是 JSS，个人还是习惯用 styled-components。\n当 JSS 和 styled-components 结合使用时会遇到优先级问题，默认情况下 JSS 把 css 注入到<code class=\"language-text\">&lt;head&gt;</code>最底部， 优先级大于 styled-components，JSS 提供了一个机制来处理这种情况。 通过调整 HTML 头中 <code class=\"language-text\">insertionPoint</code> 的位置, 可以 控制顺序 将 CSS 规则应用于组件。解决方案：</p>\n<ul>\n<li>\n<p>使用 styled-components 的时候可以<a href=\"https://material-ui.com/guides/interoperability/#controlling-priority\">用&#x26;&#x26;增加 css 权重</a>，<a href=\"https://www.styled-components.com/docs/advanced#issues-with-specificity\">styled-components 相关文档</a>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/Button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Button<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token string\">`\n&amp;&amp; {\n  background: linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%);\n  border-radius: 3px;\n  border: 0;\n  color: white;\n  height: 48px;\n  padding: 0 30px;\n  box-shadow: 0 3px 5px 2px rgba(255, 105, 135, 0.3);\n}\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但是有时候这种方法会不起作用，可以通过<a href=\"https://material-ui.com/guides/interoperability/#deeper-elements\">过滤往下传递的 props</a>解决：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/Button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> color<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>other <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Button <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>other<span class=\"token punctuation\">}</span> classes<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'label'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token string\">`\nbackground: linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%);\nborder: 0;\ncolor: white;\nheight: 48px;\npadding: 0 30px;\nbox-shadow: 0 3px 5px 2px rgba(255, 105, 135, 0.3);\n\n&amp; .label {\n  color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n}\n`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">StyledComponentsButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>Material<span class=\"token operator\">-</span><span class=\"token constant\">UI</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>StyledButton color<span class=\"token operator\">=</span><span class=\"token string\">\"papayawhip\"</span><span class=\"token operator\">></span>Styled Components<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面例子给 Button 的 label 通过 classes 加一个 label 类，在 styled-components 里给新加的 label 类加样式。而 color 这个 props 是为了给 styled-components 用的，所以过滤掉不需要传给 Button</p>\n</li>\n<li>\n<p><a href=\"https://material-ui.com/customization/css-in-js/#css\">添加一个 HTML 注释, 用于确定 JSS 将在何处插入样式</a></p>\n</li>\n</ul>","frontmatter":{"title":"Material-UI、styled-components结合使用","date":"2019.01.02"}}},"pageContext":{"slug":"/artical/Material-UI、styled-components结合使用/","previous":{"frontmatter":{"title":"gatsby"},"fields":{"slug":"/artical/gatsby/","tagSlugs":["/tags/gatsby/","/tags/react/"]}},"next":{"frontmatter":{"title":"gulp笔记"},"fields":{"slug":"/artical/gulp笔记/","tagSlugs":["/tags/gulp/"]}}}}