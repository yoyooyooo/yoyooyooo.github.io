{"data":{"allMarkdownRemark":{"totalCount":20,"edges":[{"node":{"id":"38c63bc6-0f8a-552c-8a23-b1567fc0a38a","frontmatter":{"title":"gatsby","date":"2019.01.07"},"fields":{"slug":"/artical/38c63bc6-0f8a-552c-8a23-b1567fc0a38a/"},"excerpt":"gatsby 是基于 react 的静态站点构建工具，不同于 ssr，他直接在编译时处理页面所需要的数据，(React 官网) https://reactjs.org 就是用 gatsby 搭建的。 用 创建页面，并且传入数据（ 原文 ）： 页面可以从 props…"}},{"node":{"id":"d9ea1beb-203b-5962-997c-29bc7f30be37","frontmatter":{"title":"Material-UI、styled-components结合使用","date":"2019.01.02"},"fields":{"slug":"/artical/d9ea1beb-203b-5962-997c-29bc7f30be37/"},"excerpt":"js-in-css 方案有很多，Material-UI 内置使用的是 JSS，个人还是习惯用 styled-components。\n当 JSS 和 styled-components 结合使用时会遇到优先级问题，默认情况下 JSS 把 css…"}},{"node":{"id":"d9f3f30c-e226-563c-a90c-668f3151def4","frontmatter":{"title":"gulp笔记","date":"2018.12.08"},"fields":{"slug":"/artical/d9f3f30c-e226-563c-a90c-668f3151def4/"},"excerpt":"gulp 常用插件/相关库 vinyl 虚拟文件对象流\nvinyl-fs 用于读取指定路径的文件并封装成 vinyl 格式的对象流，或者将 vinyl 对象流写入文件系统指定路径，该工具该支持 glob，该工具其实是 gulp 的 src 和 dest 的底层实现\nvinyl…"}},{"node":{"id":"4ba84482-87e8-5ed4-a0d2-98b599f34b70","frontmatter":{"title":"umi插件笔记","date":"2018.11.15"},"fields":{"slug":"/artical/4ba84482-87e8-5ed4-a0d2-98b599f34b70/"},"excerpt":"umi 的核心是插件系统，可以写自己的插件针对功能的需要可以去使用修改代码打包配置，修改启动代码，约定目录结构，修改 HTML 等更丰富接口，具体 官方文档 写的挺详细的，这里记录下实际使用。 插件使用 插件可以是一个 npm 包，也可以是路径直接引向一个 JS…"}},{"node":{"id":"d6df7d43-9a51-5cee-8122-0ea4b9683226","frontmatter":{"title":"nodejs编写命令行工具","date":"2018.11.02"},"fields":{"slug":"/artical/d6df7d43-9a51-5cee-8122-0ea4b9683226/"},"excerpt":"命令可使用 这个库 简单的复制模版到指定目录可使用 或  。 或者用"}},{"node":{"id":"32335539-3640-5cb9-adf9-2b8064b805e4","frontmatter":{"title":"Rxjs笔记（10）：转化类操作符","date":"2018.06.04"},"fields":{"slug":"/artical/32335539-3640-5cb9-adf9-2b8064b805e4/"},"excerpt":"map 最简单的转化操作符，类似 js 数组的 map，接受一个函数参数，第二个参数可选，作为函数参数执行时的 this 指向。需要注意的是使用第二个参数的时候，函数参数不能用箭头函数。不过第二个参数还是少用吧，如果一个函数执行时依赖于 this…"}},{"node":{"id":"9b413d78-65ad-534c-b3c2-93f5212c8ae7","frontmatter":{"title":"Rxjs笔记（9）：操作符例子集合","date":"2018.06.02"},"fields":{"slug":"/artical/9b413d78-65ad-534c-b3c2-93f5212c8ae7/"},"excerpt":"Rxjs 最难的是怎么合理利用这么多操作符达到想要的目的，记录一些例子，可能不是最优解，主要为了增加不同操作符的熟练度，有些例子估计学到后面需要回头再来优化 记录 5S 内点击次数 分成 2 个 Observable，一个专门负责计数，一个专门负责响应点击事件"}},{"node":{"id":"e0637a27-66f2-5505-9ae0-a6e1d12f74d7","frontmatter":{"title":"Rxjs笔记（8）：过滤数据流","date":"2018.05.31"},"fields":{"slug":"/artical/e0637a27-66f2-5505-9ae0-a6e1d12f74d7/"},"excerpt":"功能 适用的操作符 过滤掉不满足条件的数据 filter 获得满足条件的第一个数据 first 获得满足条件的最后一个数据 last 从数据流中选取最先出现的若干数据 take 从数据流中选取最后出现的若干数据 takeLast…"}},{"node":{"id":"31e0a56f-8adc-5773-959f-5c0850c9f3d7","frontmatter":{"title":"Rxjs笔记（7）：辅助类操作符","date":"2018.05.30"},"fields":{"slug":"/artical/31e0a56f-8adc-5773-959f-5c0850c9f3d7/"},"excerpt":"功能 适用的操作符 统计数据流中产生的所有数据个数 count 获得数据流中最大或者最小的数据 max 、 min 对数据流中所有数据进行规约操作 reduce 判断是否所有数据都满足某个条件 every 找到第一个满足条件的数据 find 、 findIndex…"}},{"node":{"id":"d07fd3fd-846f-59ff-a868-4d34b34575df","frontmatter":{"title":"Rxjs笔记（6）：合并类操作符","date":"2018.05.28"},"fields":{"slug":"/artical/d07fd3fd-846f-59ff-a868-4d34b34575df/"},"excerpt":"功能 适用操作符 把多个操作符以头尾相连的方式合并 concat 、 concatAll 把多个操作符以先到先得的方式合并 merge 、 mergeAll 把多个操作符以一一对应的方式合并 zip 、 zipAll…"}}]}},"pageContext":{"limit":10,"skip":0}}