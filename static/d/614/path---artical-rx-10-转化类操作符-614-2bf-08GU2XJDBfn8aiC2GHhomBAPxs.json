{"data":{"site":{"siteMetadata":{"title":"yoyo","author":"yoyo"}},"markdownRemark":{"id":"32335539-3640-5cb9-adf9-2b8064b805e4","excerpt":"map 最简单的转化操作符，类似 js 数组的 map，接受一个函数参数，第二个参数可选，作为函数参数执行时的 this 指向。需要注意的是使用第二个参数的时候，函数参数不能用箭头函数。不过第二个参数还是少用吧，如果一个函数执行时依赖于 this，难以预料结果，不符合纯函数思想。 mapTo…","html":"<h1>map</h1>\n<p>最简单的转化操作符，类似 js 数组的 map，接受一个函数参数，第二个参数可选，作为函数参数执行时的 this 指向。需要注意的是使用第二个参数的时候，函数参数不能用箭头函数。不过第二个参数还是少用吧，如果一个函数执行时依赖于 this，难以预料结果，不符合纯函数思想。</p>\n<h1>mapTo</h1>\n<p>把上游所有数据都转化为一个相同的数据，可以用 map 实现，偷懒版 map。</p>\n<h1>pluck</h1>\n<p>把上游数据中特性字段取出来。可以接受多个参数，表示访问嵌套属性。也可以用 map 来实现，不过比 map 方便的一点是，pluck 如果没有该属性会返回 undefined 给下游，用 map 还得自己判断是否不存在属性。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//a b c</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span>\n  <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> test<span class=\"token punctuation\">:</span> <span class=\"token number\">111</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//111 undefined undefined</span></code></pre></div>\n<h1>无损回压控制</h1>\n<p>之前用过滤类操作符进行的回压控制都是有损的，会舍弃掉一些数据。其实也可以无损，只要把一定时间内产生的数据放到一个数据集合内，一次性丢给下游，这个集合可以是数组，也可以是一个 Observable 对象。支持数组的包含 buffer，支持 Observable 的包含 window。\n如果这样做，下游必须做对应的处理，因为本来下游是处理一个个数据的，结果现在传下来的是一个集合，所以无损回压控制变相来说是把数据的取舍决策权交给了下游。</p>\n<h1>windowTime 和 bufferTime</h1>\n<p>根据时间来缓存上游数据。按一定时间划分时间区块，每一块时间缓存成一个集合，windowTime 缓存为 Observable 对象，bufferTime 缓存成数组。\n<code class=\"language-text\">interval(1000) |&gt; windowTime(2000)</code>的弹珠图可表示为：\n<svg width=\"598.4000244140625\" height=\"323\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21\" y1=\"37\" x2=\"21\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"134.6502248901367\" y1=\"37\" x2=\"134.6502248901367\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"248.47066978759764\" y1=\"37\" x2=\"248.47066978759764\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"362.17763468017574\" y1=\"37\" x2=\"362.17763468017574\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"475.7711195678711\" y1=\"37\" x2=\"475.7711195678711\" y2=\"297\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(113.65px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(227.471px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(341.178px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(454.771px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 41 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0\" y1=\"26\" x2=\"113.53674488525391\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"113.53674488525391\" y1=\"11\" x2=\"113.53674488525391\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(56.7967px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g></g><!-- react-empty: 48 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 57 --><g transform=\"translate(21, 0)\"><line x1=\"113.65022489013673\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"113.65022489013673\" y1=\"26\" x2=\"227.35718978271484\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"227.35718978271484\" y1=\"11\" x2=\"227.35718978271484\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(113.934px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(171.014px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g></g><!-- react-empty: 64 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 76 --><g transform=\"translate(21, 0)\"><line x1=\"227.47066978759764\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"227.47066978759764\" y1=\"26\" x2=\"341.06415467529297\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"341.06415467529297\" y1=\"11\" x2=\"341.06415467529297\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(227.925px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g><g style=\"transform: translate(285.005px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g></g><!-- react-empty: 83 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 95 --><g transform=\"translate(21, 0)\"><line x1=\"341.17763468017574\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"341.17763468017574\" y1=\"26\" x2=\"454.7143795654297\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"454.7143795654297\" y1=\"11\" x2=\"454.7143795654297\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(341.859px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g><g style=\"transform: translate(398.825px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g></g><!-- react-empty: 102 --></g></g><g transform=\"translate(0, 271)\"><!-- react-empty: 114 --><g transform=\"translate(21, 0)\"><line x1=\"454.7711195678711\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 119 --><g><g style=\"transform: translate(455.679px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g><g style=\"transform: translate(512.532px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g></g><!-- react-empty: 121 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token function\">interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">bufferTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[0] [1,2] [3,4] ...</span></code></pre></div>\n<p>bufferTime 和 windowTime 还可以接收第二个参数，表示吐出集合的频率,\n<code class=\"language-text\">interval(1000) |&gt; windowTime(2000,1000)</code>的弹珠图可表示为：\n<svg width=\"598.4000244140625\" height=\"375\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21\" y1=\"37\" x2=\"21\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"115.94493741861979\" y1=\"37\" x2=\"115.94493741861979\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"210.98444150797525\" y1=\"37\" x2=\"210.98444150797525\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"305.92937892659506\" y1=\"37\" x2=\"305.92937892659506\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"401.06344968668617\" y1=\"37\" x2=\"401.06344968668617\" y2=\"297\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"496.19752044677733\" y1=\"37\" x2=\"496.19752044677733\" y2=\"349\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(94.9449px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(189.984px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(284.929px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(380.063px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(475.198px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 175 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0\" y1=\"26\" x2=\"189.32247481282553\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"189.32247481282553\" y1=\"11\" x2=\"189.32247481282553\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(95.1341px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g></g><!-- react-empty: 182 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 579 --><g transform=\"translate(21, 0)\"><line x1=\"94.94493741861979\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"94.94493741861979\" y1=\"26\" x2=\"284.36197890218097\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"284.36197890218097\" y1=\"11\" x2=\"284.36197890218097\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(95.3232px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(190.363px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g></g><!-- react-empty: 586 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 598 --><g transform=\"translate(21, 0)\"><line x1=\"189.98444150797525\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"189.98444150797525\" y1=\"26\" x2=\"379.4960496622721\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"379.4960496622721\" y1=\"11\" x2=\"379.4960496622721\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(190.552px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(285.402px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g></g><!-- react-empty: 605 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 617 --><g transform=\"translate(21, 0)\"><line x1=\"284.92937892659506\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"284.92937892659506\" y1=\"26\" x2=\"474.6301204223633\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"474.6301204223633\" y1=\"11\" x2=\"474.6301204223633\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(285.875px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g><g style=\"transform: translate(380.536px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g></g><!-- react-empty: 624 --></g></g><g transform=\"translate(0, 271)\"><!-- react-empty: 636 --><g transform=\"translate(21, 0)\"><line x1=\"380.06344968668617\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 641 --><g><g style=\"transform: translate(380.725px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g><g style=\"transform: translate(475.576px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g></g><!-- react-empty: 643 --></g></g><g transform=\"translate(0, 323)\"><!-- react-empty: 655 --><g transform=\"translate(21, 0)\"><line x1=\"475.19752044677733\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 660 --><g><g style=\"transform: translate(475.765px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g></g><!-- react-empty: 662 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<p><strong>可以看出：如果第一个参数大于第二个，缓存区就会重叠，第一个参数小于第二个，缓存区就会没法完全覆盖整个上游数据流，当然只是可能会重复或者丢失数据，因为重叠或者缺失的时间区域不一定产生了数据。</strong></p>\n<p><strong>2 个参数相同的情况相当于只有一个参数的情况</strong>\nbufferTime 和 windowTime 还可以接受第三个参数，用于限制缓存集合内数据的最大个数，超过上限后集合就会立即完结。\n<code class=\"language-text\">timer(0,1000) |&gt; windowTime(4000, 2000)</code>弹珠图如下：\n<svg width=\"598.4000244140625\" height=\"323\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21\" y1=\"37\" x2=\"21\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"134.6502248901367\" y1=\"37\" x2=\"134.6502248901367\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"248.35718978271484\" y1=\"37\" x2=\"248.35718978271484\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"361.8939346679688\" y1=\"37\" x2=\"361.8939346679688\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"475.65763956298827\" y1=\"37\" x2=\"475.65763956298827\" y2=\"297\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(113.65px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(227.357px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(340.894px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(454.658px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 175 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0\" y1=\"26\" x2=\"227.0167497680664\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"227.0167497680664\" y1=\"11\" x2=\"227.0167497680664\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(0.17022px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(56.967px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(113.764px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g><g style=\"transform: translate(170.901px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g></g><!-- react-empty: 182 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 1282 --><g transform=\"translate(21, 0)\"><line x1=\"113.65022489013673\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"113.65022489013673\" y1=\"26\" x2=\"340.72371466064453\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"340.72371466064453\" y1=\"11\" x2=\"340.72371466064453\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(113.934px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g><g style=\"transform: translate(170.958px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g><g style=\"transform: translate(227.754px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(284.665px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g></g><!-- react-empty: 1289 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 1307 --><g transform=\"translate(21, 0)\"><line x1=\"227.35718978271484\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"227.35718978271484\" y1=\"26\" x2=\"454.37393955078124\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"454.37393955078124\" y1=\"11\" x2=\"454.37393955078124\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(227.868px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(284.721px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g><g style=\"transform: translate(341.461px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(398.372px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g></g><!-- react-empty: 1314 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 1332 --><g transform=\"translate(21, 0)\"><line x1=\"340.8939346679688\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 1337 --><g><g style=\"transform: translate(341.575px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(398.428px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g><g style=\"transform: translate(455.225px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g><g style=\"transform: translate(512.135px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 1339 --></g></g><g transform=\"translate(0, 271)\"><!-- react-empty: 1357 --><g transform=\"translate(21, 0)\"><line x1=\"454.65763956298827\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 1362 --><g><g style=\"transform: translate(455.282px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g><g style=\"transform: translate(512.249px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 1364 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<p><code class=\"language-text\">timer(0,1000) |&gt; windowTime(4000, 2000, 2)</code>弹珠图如下：\n<svg width=\"598.4000244140625\" height=\"323\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21\" y1=\"37\" x2=\"21\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"134.5934848876953\" y1=\"37\" x2=\"134.5934848876953\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"248.18696977539062\" y1=\"37\" x2=\"248.18696977539062\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"361.78045466308595\" y1=\"37\" x2=\"361.78045466308595\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"475.37393955078124\" y1=\"37\" x2=\"475.37393955078124\" y2=\"297\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(113.593px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(227.187px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(340.78px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(454.374px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 175 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0\" y1=\"26\" x2=\"57.13718245849609\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"57.13718245849609\" y1=\"3.5\" x2=\"57.13718245849609\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(0.22696px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(57.0804px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g></g><!-- react-empty: 182 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 1390 --><g transform=\"translate(21, 0)\"><line x1=\"113.59348488769531\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"113.59348488769531\" y1=\"26\" x2=\"171.18458736572265\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"171.18458736572268\" y1=\"3.5\" x2=\"171.18458736572268\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(113.934px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g><g style=\"transform: translate(171.071px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g></g><!-- react-empty: 1397 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 1409 --><g transform=\"translate(21, 0)\"><line x1=\"227.18696977539062\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"227.18696977539062\" y1=\"26\" x2=\"284.94829226074216\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"284.94829226074216\" y1=\"3.5\" x2=\"284.94829226074216\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(228.095px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(284.892px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g></g><!-- react-empty: 1416 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 1428 --><g transform=\"translate(21, 0)\"><line x1=\"340.78045466308595\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"340.78045466308595\" y1=\"26\" x2=\"398.88221716308595\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"398.8822171630859\" y1=\"3.5\" x2=\"398.8822171630859\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(341.859px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(398.769px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g></g><!-- react-empty: 1435 --></g></g><g transform=\"translate(0, 271)\"><!-- react-empty: 1447 --><g transform=\"translate(21, 0)\"><line x1=\"454.37393955078124\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"454.37393955078124\" y1=\"26\" x2=\"512.5891820556641\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"512.5891820556641\" y1=\"3.5\" x2=\"512.5891820556641\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(455.679px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g><g style=\"transform: translate(512.532px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 1454 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg>\nbufferTime 类似，只是变成数组</p>\n<h1>windowCount 和 bufferCount</h1>\n<p>根据数据个数缓存上游数据。也就是不管数据输出频率，按一定数量平分上游数据变成一个个缓存集合。windowCount 和 bufferCount 同样可以接受第二个参数，也是控制缓存集合产生的频率。\n<code class=\"language-text\">timer(0, 1000) |&gt; bufferCount(3)</code>弹珠图如下：\n<svg width=\"598.4000244140625\" height=\"271\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21\" y1=\"37\" x2=\"21\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"135.04740490722656\" y1=\"37\" x2=\"135.04740490722656\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"305.6645922485352\" y1=\"37\" x2=\"305.6645922485352\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"476.39525959472655\" y1=\"37\" x2=\"476.39525959472655\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(114.047px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(284.665px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(455.395px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 1481 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0\" y1=\"26\" x2=\"113.99066490478516\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"113.99066490478515\" y1=\"3.5\" x2=\"113.99066490478515\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(0.22696px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(57.0804px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(113.934px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g></g><!-- react-empty: 1488 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 1893 --><g transform=\"translate(21, 0)\"><line x1=\"114.04740490722656\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"114.04740490722656\" y1=\"26\" x2=\"284.6078522460937\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"284.6078522460938\" y1=\"3.5\" x2=\"284.6078522460938\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(170.958px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g><g style=\"transform: translate(227.754px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(284.608px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g></g><!-- react-empty: 1900 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 1915 --><g transform=\"translate(21, 0)\"><line x1=\"284.6645922485352\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"284.6645922485352\" y1=\"26\" x2=\"455.33851959228514\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"455.33851959228514\" y1=\"3.5\" x2=\"455.33851959228514\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(341.575px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(398.428px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g><g style=\"transform: translate(455.282px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g></g><!-- react-empty: 1922 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 1937 --><g transform=\"translate(21, 0)\"><line x1=\"455.39525959472655\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 1942 --><g><g style=\"transform: translate(512.305px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 1944 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<p><code class=\"language-text\">timer(0, 1000) |&gt; bufferCount(3, 4)</code>弹珠图如下：\n<svg width=\"598.4000244140625\" height=\"219\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21.056740002441405\" y1=\"37\" x2=\"21.056740002441405\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"191.95762735595704\" y1=\"37\" x2=\"191.95762735595704\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"419.4850371459961\" y1=\"37\" x2=\"419.4850371459961\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0.05674px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(170.958px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(398.485px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 1481 --><g transform=\"translate(21, 0)\"><line x1=\"0.05674000244140625\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0.05674000244140625\" y1=\"26\" x2=\"114.16088491210938\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"114.16088491210937\" y1=\"3.5\" x2=\"114.16088491210937\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(0.22696px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(57.1372px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(114.047px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g></g><!-- react-empty: 1488 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 1964 --><g transform=\"translate(21, 0)\"><line x1=\"170.95762735595704\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"170.95762735595704\" y1=\"26\" x2=\"341.57481469726565\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"341.5748146972656\" y1=\"3.5\" x2=\"341.5748146972656\" y2=\"48.5\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(227.868px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(284.665px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g><g style=\"transform: translate(341.518px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g></g><!-- react-empty: 1971 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 1986 --><g transform=\"translate(21, 0)\"><line x1=\"398.4850371459961\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 1991 --><g><g style=\"transform: translate(455.339px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g><g style=\"transform: translate(512.305px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 1993 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<h1>windowWhen 和 bufferWhen</h1>\n<p>类似 repeatWhen/takeUntil，用一个 Observable 对象来控制缓存集合的生成。接受一个函数作为参数，该函数返回一个 Observable 对象，用于控制上游数据的分割，每当这个 Observable 对象产生数据，windowWhen 就会关闭上一个缓冲窗口，重新开启一个缓冲窗口。\n这个函数没有参数，因为调用的时机和上游没有关系，但是这样只能调用外部参数来获取变化因素，违背了函数式编程原则，或许可以用点击事件之类的来控制，但是也不太好应用，这 2 个操作符看起来用处不大。</p>\n<h1>windowToggle 和 bufferToggle</h1>\n<p>接受 2 个参数，第一个参数为一个 Observable 对象，用来控制缓存窗口的开启。\n第二个参数为一个函数，用来控制缓存窗口的关闭。这个函数接受一个参数，为第一个参数的 Observable 对象产生的数据，返回一个 Observable 对象。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const source$ =\n  timer(0, 1000)\n  |&gt; windowToggle(timer(0, 4000), a =&gt; {\n    return a % 2 === 0 ? timer(2000) : timer(4000);\n  });</code></pre></div>\n<p><svg width=\"598.4000244140625\" height=\"271\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"21.07565333658854\" y1=\"37\" x2=\"21.07565333658854\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"172.53363318684896\" y1=\"37\" x2=\"172.53363318684896\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"324.1050930419922\" y1=\"37\" x2=\"324.1050930419922\" y2=\"193\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"475.4874195556641\" y1=\"37\" x2=\"475.4874195556641\" y2=\"245\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(0.0756533px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(151.534px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(303.105px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(454.487px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 2010 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 2118 --><g transform=\"translate(21, 0)\"><line x1=\"0.07565333658854168\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"0.07565333658854168\" y1=\"26\" x2=\"75.72898992513021\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"75.72898992513022\" y1=\"11\" x2=\"75.72898992513022\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(0.11348px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(38.0536px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g></g><!-- react-empty: 2125 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 2137 --><g transform=\"translate(21, 0)\"><line x1=\"151.53363318684896\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"151.53363318684896\" y1=\"26\" x2=\"302.8781330322266\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"302.8781330322266\" y1=\"11\" x2=\"302.8781330322266\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(151.723px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(189.701px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g><g style=\"transform: translate(227.565px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(265.468px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g></g><!-- react-empty: 2144 --></g></g><g transform=\"translate(0, 167)\"><!-- react-empty: 2162 --><g transform=\"translate(21, 0)\"><line x1=\"303.1050930419922\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"rgba(118, 118, 118, 0.2)\" style=\"shape-rendering: crispEdges;\"></line><line x1=\"303.1050930419922\" y1=\"26\" x2=\"378.8340829671224\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"rgba(118, 118, 118, 0.2)\" style=\"transition: fill 0.2s ease-in-out;\"></path><line x1=\"378.83408296712236\" y1=\"11\" x2=\"378.83408296712236\" y2=\"41\" stroke-width=\"2\" stroke=\"#767676\" style=\"opacity: 1; transition: opacity 0.5s ease-in-out;\"></line><g><g style=\"transform: translate(303.446px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g><g style=\"transform: translate(341.348px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">9</text></g></g><!-- react-empty: 2169 --></g></g><g transform=\"translate(0, 219)\"><!-- react-empty: 2181 --><g transform=\"translate(21, 0)\"><line x1=\"454.4874195556641\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 2186 --><g><g style=\"transform: translate(455.017px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">12</text></g><g style=\"transform: translate(492.995px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">13</text></g><g style=\"transform: translate(531.011px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">14</text></g></g><!-- react-empty: 2188 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg></p>\n<h1>window 和 buffer</h1>\n<p>只接受一个 Observable 对象作为参数。当这个 Observable 对象产生数据时，前一个缓存窗口结束，并且开启一个新缓存窗口。这个 Observable 对象如果不是永不完结的，那么它完结会导致 window 产生的当前内部 Observable 对象完结。</p>\n<h1>高阶 map</h1>\n<p>高阶 map 接受一个函数参数 project，，project 把一个数据映射为一个 Observable 对象，project 接受 2 个参数，第一个为上游传下来的数据 value，第二个为对应数据在上游数据流中的序号 index。\n高阶 map 做的事比 map 更进一步，不只是把 project 返回的结果丢给下游完事，而是把每个内部 Observable 对象中的数据做组合，然后传给下游。通俗点说就是“砸平”。\n高阶 map 有 4 个：concatMap、mergeMap、switchMap、exhaustMap。他们其实都可以用 map+concatAll/mergeAll/switchAll/exhaustAll 实现。</p>\n<h1>concatMap</h1>\n<p>concatAll+map，内部 Observable 对象们首尾相连的合并。\n一个特别适合使用 concatMap 的实际例子是网页应用中的拖拽操作。\n一次完整的拖拽分解为 3 个事件：mousedown、mousemove、mouseup，可以理解为一次拖拽可以分解为以 mousedown 开始，中间是无数个<strong>首尾相连</strong>的 mosemove，以 mouseup 结束的过程。\n转化为 Rxjs 可理解为：mousedown 为一个 起始 Observable 对象，每次按下鼠标的时候 mousedown 数据流产生一个数据，这个数据转化为一个 mousemove，这个 mousemove 就是 concatMap 的内部 Observable 对象，代表每一段极小距离的 mousemove，所有内部 Observable 对象首尾相连就组成了一个完整的移动路线。最后以 mouseup 结束（takeUntil 监视，来控制数据流完结）。\n完整代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fromEvent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> concatMap<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">,</span> merge<span class=\"token punctuation\">,</span> takeUntil <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mouseDown$ <span class=\"token operator\">=</span> <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mouseUp$ <span class=\"token operator\">=</span> <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseup'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mouseOut$ <span class=\"token operator\">=</span> <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mouseMove$ <span class=\"token operator\">=</span> <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> drag$ <span class=\"token operator\">=</span>\n  mouseDown$\n  <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">concatMap</span><span class=\"token punctuation\">(</span>startEvent <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> initialLeft <span class=\"token operator\">=</span> box<span class=\"token punctuation\">.</span>offsetLeft<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> initialTop <span class=\"token operator\">=</span> box<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> stop$ <span class=\"token operator\">=</span> mouseUp$ <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>mouseOut$<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      mouseMove$\n      <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">takeUntil</span><span class=\"token punctuation\">(</span>stop$<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>moveEvent <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token punctuation\">:</span> moveEvent<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> startEvent<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> initialLeft<span class=\"token punctuation\">,</span>\n          y<span class=\"token punctuation\">:</span> moveEvent<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> startEvent<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> initialTop\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndrag$<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n  box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>mergeMap</h1>\n<p>mergeAll+map。所有内部 Observable 产生的数据<strong>直接</strong>传给下游。\n常用的场景是处理异步操作问题，如果把点击事件看作一个数据流，用 mergeMap 可以十分简洁，而且看起来就像同步，这就是 Rxjs 的优势</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span>\n  <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">mergeMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsource$<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>switchMap</h1>\n<p>switchAll+map。以新的内部 Observable 对象为准。可以应用于避免重复点击等场景。</p>\n<h1>exhaustMap</h1>\n<p>exhaustAll+map。前一个内部 Observable 完结之前，上游推送下来的数据不会调用 project 函数参数。\n这种“喜旧厌新”的场景不错，不过也不是没有，比如利用 ajax 建立服务器和浏览器之间的长连接，让服务器可以沿着 ajax 通道推送消息下来，那么只要有这样长连接的 ajax 存在，就不需要简历像你的 ajax。</p>\n<h1>concatMapTo/mergeMapTo/switchMapTo</h1>\n<p>类似 concatMap/mergeMap/switchMap，只是接受的参数不是函数，而是一个 Observable 对象。注意，exhaust 没有 mapTo</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//每次点击重新开始计时</span>\n<span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">switchMapTo</span><span class=\"token punctuation\">(</span><span class=\"token function\">interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>expand</h1>\n<p>类似 mergeMap，只是所有 expand 传递给下游的数据同时也会传递给自己，就像是逐层“展开”所有数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">expand</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> <span class=\"token keyword\">of</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1 2 4 6 8 16 32 ...</span></code></pre></div>\n<h1>数组分组</h1>\n<p>有时候需要对数据进行分组。数据分组的过程和合并类操作符的工作正好相反。回压类操作符也有类似分组的功能，比如 window，但是 window 传给一个数据流的宗师连续的数据，实际情况中，需要分组的数据可能是交叉出现的，比如对于随机的证书序列，把奇数放在一个分组，偶数放在另一个分组，这样 window 肯定做不到。所以有了 gruopBy 和 partition。</p>\n<h1>groupBy</h1>\n<p>输出一个高阶 Observable 对象，每个内部 Observable 对象包含上游产生的满足某个条件的数据，即某个分组的数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token function\">interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><svg width=\"598.4000244140625\" height=\"167\" style=\"display: block; font-size: 14px; font-family: Arial, sans-serif; dominant-baseline: central; text-anchor: middle; cursor: default; user-select: none;\"><line x1=\"77.79674244384765\" y1=\"37\" x2=\"77.79674244384765\" y2=\"89\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><line x1=\"134.70696489257813\" y1=\"37\" x2=\"134.70696489257813\" y2=\"141\" stroke=\"#767676\" stroke-width=\"1\" stroke-dasharray=\"3,3\"></line><g transform=\"translate(0, 11)\"><!-- react-empty: 10 --><g transform=\"translate(21, 0)\"><line x1=\"0\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#000000\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#000000\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 15 --><g><g style=\"transform: translate(56.7967px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g><g style=\"transform: translate(113.707px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#767676\"></circle></g></g><!-- react-empty: 17 --></g></g><g transform=\"translate(0, 63)\"><!-- react-empty: 56 --><g transform=\"translate(21, 0)\"><line x1=\"56.796742443847656\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 61 --><g><g style=\"transform: translate(56.9102px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">0</text></g><g style=\"transform: translate(170.617px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">2</text></g><g style=\"transform: translate(284.324px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">4</text></g><g style=\"transform: translate(398.145px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">6</text></g><g style=\"transform: translate(512.135px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">8</text></g></g><!-- react-empty: 63 --></g></g><g transform=\"translate(0, 115)\"><!-- react-empty: 71 --><g transform=\"translate(21, 0)\"><line x1=\"113.70696489257813\" y1=\"26\" x2=\"567.4000244140625\" y2=\"26\" stroke-width=\"2\" stroke=\"#767676\" style=\"shape-rendering: crispEdges;\"></line><path transform=\"translate(567.4000244140625, 21)\" d=\"M0 0 L10 5 L0 10 z\" fill=\"#767676\" style=\"transition: fill 0.2s ease-in-out;\"></path><!-- react-empty: 76 --><g><g style=\"transform: translate(113.82px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">1</text></g><g style=\"transform: translate(227.527px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">3</text></g><g style=\"transform: translate(341.178px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">5</text></g><g style=\"transform: translate(455.225px, 26px) scale(1); transition: transform 0.5s ease-in-out;\"><circle cx=\"0\" cy=\"0\" r=\"15\" stroke-width=\"2\" stroke=\"#767676\" fill=\"#ffffff\"></circle><text x=\"0\" y=\"0\" style=\"fill: rgb(118, 118, 118); dominant-baseline: central;\">7</text></g></g><!-- react-empty: 78 --></g></g><g style=\"text-anchor: start; dominant-baseline: text-before-edge;\"></g></svg>\n可以看出，groupBy 和回压控制操作符的最大区别是上游的数据可以交叉传递给不同的内部 Observable 对象，而对 window 和 buffer 来说，上游数据肯定是连续传给同一个内部 Observable 对象。\ngroupBy 返回的高阶 Observable 中，每个内部 Observable 对象其实是一个类 GruopedObservable 的实例，这个类的实例对象又一个 key 属性，就是这个内部 Observable 对象分组的 key 值。\n<img src=\"http://p4yaly36s.bkt.clouddn.com/201806052330_630.png\">\ngroupBy 例子：\n对不同 class 元素的点击事件分组处理</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>a<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>a<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>c<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> click$ <span class=\"token operator\">=</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groupByClass$ <span class=\"token operator\">=</span> click$ <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=></span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span>groupByClass$ <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">mergeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>aHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span>groupByClass$ <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">mergeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>bHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>partition</h1>\n<p>有时候简单的问题用 groupBy 有点小题大做，因为不得不去处理高阶 Observable。partition 就比较简单易用，接受一个判定函数作为参数，对上游每个数据进行判定，满足条件的放一个 Observable 对象，不满足的放另一个 Observable 对象，这 2 个 Observable 组合成一个数组返回给下游。<strong>注意，partition 是唯一一个不返回 Observable 对象的操作符，所以 patition 一般不会链式调用，除非想舍弃里一个 Observable 对象，但是那样还不如用 filter</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>even$<span class=\"token punctuation\">,</span> odd$<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source$ <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\neven$<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0 2 4 6 ...</span>\nodd$<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1 3 5 7 ...</span></code></pre></div>\n<h1>scan</h1>\n<p>用法很像数学类操作符 reduce，区别是 scan 对上游每个数据都会产生一个规约结果（每次累计都返回一个值给下游），reduce 是对上游所有数据进行规约（对上游数据全部累计完毕才会输出一个值），reduce 最多只给下游传递一个数据，如果上游永不完结，reduce 也不会产生数据，而 scan 可以处理永不完结的 Observable 对象。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> source$ <span class=\"token operator\">=</span> <span class=\"token function\">interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token operator\">></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0 1 3 6 10 ...</span></code></pre></div>\n<p>scan 可能是 Rxjs 中对狗肩交互式应用程序最重要的一个操作符，因为它可以维持应用的当前状态，一方面可以根据数据流持续更新这些状态，另一方面又可以持续把更新状态传给另一个数据流做必要操作。\nscan 实际上实现了一个看不见的累计值变量，每个上游数据都会更新这个累计值，用来保存应用中的状态，有了 scan 就不需要一个全局变量来维护状态了，而且一个应用同时使用多个 scan 也不会互相干扰。</p>\n<h1>mergeScan</h1>\n<p>每当上游推送一个数据下来，就调用一次规约函数，并且订阅返回的 Observable 对象，这个 Observable 对象返回的任何数据都会传给下游，mergeScan 会记住传给下游的最后一个数据，当上游再次推送数据下来的时候，就把最后一次传递给下游的数据作为规约函数的参数。\n实际场景不多，大多数情况 scan 就够用。</p>","frontmatter":{"title":"Rxjs笔记（10）：转化类操作符","date":"2018.06.04"}}},"pageContext":{"slug":"/artical/rx10转化类操作符/","previous":{"frontmatter":{"title":"nodejs编写命令行工具"},"fields":{"slug":"/artical/nodejs编写命令行工具/","tagSlugs":["/tags/nodejs/"]}},"next":{"frontmatter":{"title":"Rxjs笔记（9）：操作符例子集合"},"fields":{"slug":"/artical/rx9操作符组合例子/","tagSlugs":["/tags/rxjs/"]}}}}